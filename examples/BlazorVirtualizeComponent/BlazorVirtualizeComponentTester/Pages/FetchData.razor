@page "/fetchdata"
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

    
<Virtualize ItemsProvider="LoadForecasts" Context="forecast" ItemSize="10">   
    <ItemContent>
        <p>
            <td>@forecast.Id</td>
            <td>@forecast.Date.ToShortDateString()</td>
            <td>@forecast.TemperatureC</td>
            <td>@forecast.TemperatureF</td>
            <td>@forecast.Summary</td>
        </p>
    </ItemContent>
    <Placeholder>
        <p>
           Loading...
        </p>
    </Placeholder>
</Virtualize>


@code {

    protected async ValueTask<ItemsProviderResult<WeatherForecast>> LoadForecasts(ItemsProviderRequest request)
    {

        var forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");

        return new ItemsProviderResult<WeatherForecast>(forecasts.Skip(request.StartIndex).Take(request.Count), forecasts.Count());
    }

    public class WeatherForecast
    {
        public int Id { get; set; }

        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
